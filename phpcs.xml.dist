<?xml version="1.0"?>
<ruleset name="Tiki Coding Standard">
    <description>Tiki Coding Standard</description>

    <!--
        # Files and folders to check
    -->

    <!-- Paths to check -->
    <file>.</file>

    <!-- Exclude libraries and other folders that should not contain code -->

    <!-- vendor folders -->
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/vendor_bundled/vendor/*</exclude-pattern>
    <exclude-pattern>*/vendor_custom/*</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>

    <!-- libraries bundled with tiki -->
    <exclude-pattern>*/lib/dracula/*</exclude-pattern>
    <exclude-pattern>*/lib/equation/*</exclude-pattern>
    <exclude-pattern>*/lib/ical/*</exclude-pattern>
    <exclude-pattern>*/lib/openlayers/*</exclude-pattern>
    <exclude-pattern>*/lib/sheet/excel/*</exclude-pattern>
    <exclude-pattern>*/lib/sheet/include/*</exclude-pattern>
    <exclude-pattern>*/lib/sheet/ole.php</exclude-pattern>
    <exclude-pattern>*/lib/sheet/ole/*</exclude-pattern>
    <exclude-pattern>*/lib/soap/nusoap/*</exclude-pattern>
    <exclude-pattern>*/lib/tar.class.php</exclude-pattern>
    <exclude-pattern>*/lib/tikihelp/js/*</exclude-pattern>
    <exclude-pattern>*/lib/tikihelp/menu/*</exclude-pattern>
    <exclude-pattern>*/lib/webmail/mimeDecode.php</exclude-pattern>
    <exclude-pattern>*/lib/webmail/net_pop3.php</exclude-pattern>

    <!-- any dot file -->
    <exclude-pattern>*/\.*/*</exclude-pattern>

    <!-- generated files / directories -->
    <exclude-pattern>*/lang/*/language.php</exclude-pattern>
    <exclude-pattern>*/lang/*/language.js</exclude-pattern>
    <exclude-pattern>*/lib/test/language/fixtures/language_*</exclude-pattern>
    <exclude-pattern>*/public/generated/*</exclude-pattern>

    
    <!-- local config files -->
    <exclude-pattern>*/local.php</exclude-pattern>
    
    <!-- other directories that should not contain core code -->
    <!-- <exclude-pattern>*/doc/*</exclude-pattern> -->
    <exclude-pattern>*/bin/*</exclude-pattern>
    <exclude-pattern>*/img/*</exclude-pattern>
    <exclude-pattern>*/storage/*</exclude-pattern>
    <exclude-pattern>*/temp/*</exclude-pattern>

    <!--
        # Default arguments for phpcs
    -->

    <!-- display progress -->
    <arg value="p"/>
    <arg name="colors"/>
    <arg name="extensions" value="php"/>

    <!--
        # Exceptions for Tiki - will be removed as we improve the code
        #
        # Using this process allow to allow specific violation of standards instead of ignoring
        # blindly all the file, allowing to catch new violations in existing files.
    -->

    <rule ref="./doc/devtools/codesniffer/standards/TikiIgnore"/>

    <!--
        # Tiki specific rules
    -->

    <rule ref="./doc/devtools/codesniffer/standards/Tiki"/>

    <!--
        # Compatibility check with PHP versions supported
    -->

    <!-- Check for compatibility for PHP >= 8.1 -->
    <config name="testVersion" value="8.1-"/>
    <rule ref="PHPCompatibility"/>

    <!-- ## Exceptions for compatibility check -->

    <!-- Skip check compatibility for functions included as polyfill -->
    <rule ref="PHPCompatibility">
        <!-- polyfill-php82: https://github.com/symfony/polyfill-php82/tree/main/bootstrap.php and
             https://github.com/symfony/polyfill-php82/tree/main/Resources/stubs -->
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.odbc_connection_string_is_quotedFound"/>
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.odbc_connection_string_should_quoteFound"/>
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.odbc_connection_string_quoteFound"/>
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.ini_parse_quantityFound"/>
        <exclude name="PHPCompatibility.Classes.NewClasses.random_brokenrandomengineerrorFound"/>
        <exclude name="PHPCompatibility.Classes.NewClasses.random_randomerrorFound"/>
        <exclude name="PHPCompatibility.Classes.NewClasses.random_randomexceptionFound"/>

        <!-- polyfill-php83: https://github.com/symfony/polyfill-php83/tree/main/bootstrap.php and
             https://github.com/symfony/polyfill-php83/tree/main/Resources/stubs -->
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.json_validateFound"/>
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.mb_str_padFound"/>
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.ldap_exop_syncFound"/>
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.ldap_connect_walletFound"/>
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.stream_context_set_optionsFound"/>
    </rule>

    <!--
        # PHP Coding Standards
    -->

    <!-- Tiki uses the Zend Coding Standards
        reference: https://github.com/zendframework/zend-coding-standard/blob/master/ruleset.xml -->
    <rule ref="PSR12"/>

    <!--  Other rules to enforce the ZF standards -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
    <rule ref="Generic.Formatting.SpaceAfterNot"/>
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1"/>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <!-- Moved as override to the end of the rule set -->
    <!--
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="ignoreBlankLines" value="false"/>
        </properties>
    </rule>
    -->

    <!-- ## Exceptions for coding standards -->

    <!-- Tiki have some guard code in most of the files, leading to both declaring and executing code in the same file -->
    <rule ref="PSR1.Files.SideEffects.FoundWithSymbols">
        <exclude-pattern>*.php</exclude-pattern>
    </rule>

    <!-- latest tiki-check.php may be used to test servers with a old version of php, so use long array syntax -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax">
        <exclude-pattern>*/tiki-check.php</exclude-pattern>
    </rule>
    <rule ref="Generic.Arrays.DisallowShortArraySyntax">
        <include-pattern>*/tiki-check.php</include-pattern>
    </rule>

    <!-- Cypth Integration requires specific naming, etc -->
    <rule ref="PSR1.Classes.ClassDeclaration.MissingNamespace">
        <exclude-pattern>lib/cypht/integration/*</exclude-pattern>
        <exclude-pattern>lib/cypht/modules/*</exclude-pattern>
    </rule>
    <rule ref="Squiz.Classes.ValidClassName.NotCamelCaps">
        <exclude-pattern>lib/cypht/integration/*</exclude-pattern>
        <exclude-pattern>lib/cypht/modules/*</exclude-pattern>
    </rule>
    <rule ref="PSR1.Classes.ClassDeclaration.MultipleClasses">
        <exclude-pattern>lib/cypht/modules/*</exclude-pattern>
    </rule>
    <rule ref="PSR1.Methods.CamelCapsMethodName.NotCamelCaps">
        <exclude-pattern>lib/cypht/integration/*</exclude-pattern>
    </rule>

    <!-- ## Mark some rules as warnings until tiki gets in a better shape -->

    <!-- Change severity to be able to filter if too many lines over 120 using cli option warning-severity=5 -->
    <rule ref="Generic.Files.LineLength">
        <severity>4</severity>
    </rule>

    <!-- ## Overrides - at the end to make sure they are applied -->
    <!-- From ZF Standards -->
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="ignoreBlankLines" value="false"/>
        </properties>
    </rule>
</ruleset>
