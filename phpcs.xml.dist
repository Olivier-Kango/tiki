<?xml version="1.0"?>
<ruleset name="Tiki Coding Standard">
    <description>Tiki Coding Standard</description>

    <!--
        # Files and folders to check
    -->

    <!-- Paths to check -->
    <file>.</file>

    <!-- Exclude libraries and other folders that should not contain code -->

    <!-- vendor folders -->
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/vendor_bundled/vendor/*</exclude-pattern>
    <exclude-pattern>*/vendor_custom/*</exclude-pattern>
    <exclude-pattern>*/vendor_extra/*</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>

    <!-- libraries bundled with tiki -->
    <exclude-pattern>*/lib/dracula/*</exclude-pattern>
    <exclude-pattern>*/lib/equation/*</exclude-pattern>
    <exclude-pattern>*/lib/ical/*</exclude-pattern>
    <exclude-pattern>*/lib/openlayers/*</exclude-pattern>
    <exclude-pattern>*/lib/sheet/excel/*</exclude-pattern>
    <exclude-pattern>*/lib/sheet/include/*</exclude-pattern>
    <exclude-pattern>*/lib/sheet/ole.php</exclude-pattern>
    <exclude-pattern>*/lib/sheet/ole/*</exclude-pattern>
    <exclude-pattern>*/lib/soap/nusoap/*</exclude-pattern>
    <exclude-pattern>*/lib/tar.class.php</exclude-pattern>
    <exclude-pattern>*/lib/tikihelp/js/*</exclude-pattern>
    <exclude-pattern>*/lib/tikihelp/menu/*</exclude-pattern>
    <exclude-pattern>*/lib/webmail/mimeDecode.php</exclude-pattern>
    <exclude-pattern>*/lib/webmail/net_pop3.php</exclude-pattern>

    <!-- any dot file -->
    <exclude-pattern>*/\.*/*</exclude-pattern>

    <!-- generated files / directories -->
    <exclude-pattern>*/lang/*/language.php</exclude-pattern>
    <exclude-pattern>*/lang/*/language.js</exclude-pattern>
    <exclude-pattern>*/lib/test/language/fixtures/language_*</exclude-pattern>

    <!-- other directories that should not contain core code -->
    <!-- <exclude-pattern>*/doc/*</exclude-pattern> -->
    <exclude-pattern>*/dump/*</exclude-pattern>
    <exclude-pattern>*/img/*</exclude-pattern>
    <exclude-pattern>*/storage/*</exclude-pattern>
    <exclude-pattern>*/temp/*</exclude-pattern>

    <!--
        # Default arguments for phpcs
    -->

    <!-- display progress -->
    <arg value="p"/>
    <arg name="colors"/>
    <arg name="extensions" value="php"/>

    <!--
        # Compatibility check with PHP versions supported
    -->

    <!-- Check for compatibility for PHP >= 7.4 -->
    <config name="testVersion" value="7.4-"/>
    <rule ref="PHPCompatibility"/>

    <!-- ## Exceptions for compatibility check -->

    <!-- tiki-check.php is shared across tiki versions, so may refer to old software -->
    <rule ref="PHPCompatibility.Extensions.RemovedExtensions">
        <exclude-pattern>*/tiki-check.php</exclude-pattern>
    </rule>

    <!-- Skip check compatibility for functions included as polyfill -->
    <rule ref="PHPCompatibility">
        <!-- https://github.com/symfony/polyfill-php80/blob/main/bootstrap.php -->
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.fdivFound"/>
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.preg_last_error_msgFound"/>
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.str_containsFound"/>
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.get_resource_idFound"/>
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.str_ends_withFound"/>
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.str_starts_withFound"/>
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.get_debug_typeFound"/>
        <exclude name="PHPCompatibility.Constants.NewConstants.filter_validate_boolFound"/>

        <!-- https://github.com/symfony/polyfill-php80/tree/main/Resources/stubs -->
        <exclude name="PHPCompatibility.Interfaces.NewInterfaces.stringableFound"/>
        <exclude name="PHPCompatibility.Classes.NewClasses.phptokenFound"/>
        <exclude name="PHPCompatibility.Classes.NewClasses.unhandledmatcherrorFound"/>
        <exclude name="PHPCompatibility.Classes.NewClasses.valueerrorFound"/>

        <!-- https://github.com/symfony/polyfill-php81/blob/main/bootstrap.php -->
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.array_is_listFound"/>
        <exclude name="PHPCompatibility.FunctionUse.NewFunctions.enum_existsFound"/>
        <exclude name="PHPCompatibility.Constants.NewConstants.mysqli_refresh_replicaFound"/>

        <!-- https://github.com/symfony/polyfill-php81/tree/main/Resources/stubs -->
        <exclude name="PHPCompatibility.Interfaces.NewInterfaces.returntypewillchangeFound"/>
    </rule>

    <!-- Skip mcrypt related checks in cryptlib.php since is there for compatibility -->
    <rule ref="PHPCompatibility.Extensions.RemovedExtensions.mcryptDeprecatedRemoved">
        <exclude-pattern>lib/crypt/cryptlib.php</exclude-pattern>
    </rule>
    <rule ref="PHPCompatibility.FunctionUse.RemovedFunctions.mcrypt_module_openDeprecatedRemoved">
        <exclude-pattern>lib/crypt/cryptlib.php</exclude-pattern>
    </rule>
    <rule ref="PHPCompatibility.FunctionUse.RemovedFunctions.mcrypt_module_closeDeprecatedRemoved">
        <exclude-pattern>lib/crypt/cryptlib.php</exclude-pattern>
    </rule>
    <rule ref="PHPCompatibility.FunctionUse.RemovedFunctions.mcrypt_enc_get_iv_sizeDeprecatedRemoved">
        <exclude-pattern>lib/crypt/cryptlib.php</exclude-pattern>
    </rule>
    <rule ref="PHPCompatibility.FunctionUse.RemovedFunctions.mcrypt_decryptDeprecatedRemoved">
        <exclude-pattern>lib/crypt/cryptlib.php</exclude-pattern>
    </rule>
    <rule ref="PHPCompatibility.Constants.RemovedConstants.mcrypt_rijndael_256DeprecatedRemoved">
        <exclude-pattern>lib/crypt/cryptlib.php</exclude-pattern>
    </rule>
    <rule ref="PHPCompatibility.Constants.RemovedConstants.mcrypt_mode_cbcDeprecatedRemoved">
        <exclude-pattern>lib/crypt/cryptlib.php</exclude-pattern>
    </rule>

    <!--
        # PHP Coding Standards
    -->

    <!-- Tiki uses the Zend Coding Standards
        reference: https://github.com/zendframework/zend-coding-standard/blob/master/ruleset.xml -->
    <rule ref="PSR12"/>

    <!--  Other rules to enforce the ZF standards -->
    <rule ref="Generic.Formatting.SpaceAfterNot"/>
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1"/>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <!-- Moved as override to the end of the rule set -->
    <!--
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="ignoreBlankLines" value="false"/>
        </properties>
    </rule>
    -->

    <!-- ## Exceptions for coding standards -->

    <!-- latest tiki-check.php may be used to test servers with a old version of php, so use long array syntax -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax">
        <exclude-pattern>*/tiki-check.php</exclude-pattern>
    </rule>
    <rule ref="Generic.Arrays.DisallowShortArraySyntax">
        <include-pattern>*/tiki-check.php</include-pattern>
    </rule>

    <!-- elFinderVolumeTikiFiles.class.php is mostly a clone of upstream files, so ignore method name -->
    <rule ref="PSR2.Methods.MethodDeclaration.Underscore">
        <exclude-pattern>lib/jquery_tiki/elfinder/elFinderVolumeTikiFiles.class.php</exclude-pattern>
    </rule>

    <!-- Temporary exceptions while codebase is not fixed -->
    <rule ref="PSR2.Methods.MethodDeclaration.Underscore">
        <exclude-pattern>lib/core/Tiki/Profile/InstallHandler.php</exclude-pattern>
        <exclude-pattern>lib/core/Tiki/Profile/InstallHandler/*</exclude-pattern>
        <exclude-pattern>lib/core/Tiki/Transition.php</exclude-pattern>
        <exclude-pattern>lib/core/Tracker/Field/Freetags.php</exclude-pattern>
        <exclude-pattern>lib/credits/creditslib.php</exclude-pattern>
        <exclude-pattern>lib/diff.php</exclude-pattern>
        <exclude-pattern>lib/diff/Diff.php</exclude-pattern>
        <exclude-pattern>lib/diff/Renderer.php</exclude-pattern>
        <exclude-pattern>lib/diff/difflib.php</exclude-pattern>
        <exclude-pattern>lib/diff/renderer_bytes.php</exclude-pattern>
        <exclude-pattern>lib/diff/renderer_character.php</exclude-pattern>
        <exclude-pattern>lib/diff/renderer_character_inline.php</exclude-pattern>
        <exclude-pattern>lib/diff/renderer_htmldiff.php</exclude-pattern>
        <exclude-pattern>lib/diff/renderer_inline.php</exclude-pattern>
        <exclude-pattern>lib/diff/renderer_sidebyside.php</exclude-pattern>
        <exclude-pattern>lib/diff/renderer_unified.php</exclude-pattern>
        <exclude-pattern>lib/filegals/filegallib.php</exclude-pattern>
        <exclude-pattern>lib/freetag/freetaglib.php</exclude-pattern>
        <exclude-pattern>lib/graph-engine/abstract.gridbased.php</exclude-pattern>
        <exclude-pattern>lib/graph-engine/core.php</exclude-pattern>
        <exclude-pattern>lib/graph-engine/gd.php</exclude-pattern>
        <exclude-pattern>lib/graph-engine/graph.bar.php</exclude-pattern>
        <exclude-pattern>lib/graph-engine/graph.multiline.php</exclude-pattern>
        <exclude-pattern>lib/graph-engine/graph.pie.php</exclude-pattern>
        <exclude-pattern>lib/graph-engine/pdflib.php</exclude-pattern>
        <exclude-pattern>lib/graph-engine/ps.php</exclude-pattern>
        <exclude-pattern>lib/importer/tikiimporter_blog.php</exclude-pattern>
        <exclude-pattern>lib/language/LanguageTranslations.php</exclude-pattern>
        <exclude-pattern>lib/pdflib.php</exclude-pattern>
        <exclude-pattern>lib/prefslib.php</exclude-pattern>
        <exclude-pattern>lib/search/searchlib-mysql.php</exclude-pattern>
        <exclude-pattern>lib/sheet/grid.php</exclude-pattern>
        <exclude-pattern>lib/test/freetag/FreetagTest.php</exclude-pattern>
        <exclude-pattern>lib/test/importer/TikiImporterBlogTest.php</exclude-pattern>
        <exclude-pattern>lib/tikilib.php</exclude-pattern>
        <exclude-pattern>lib/trackers/trackerlib.php</exclude-pattern>
        <exclude-pattern>lib/userslib.php</exclude-pattern>
        <exclude-pattern>lib/wiki-plugins/wikiplugin_freetagged.php</exclude-pattern>
        <exclude-pattern>lib/wiki/pluginslib.php</exclude-pattern>
        <exclude-pattern>tiki-browse_freetags.php</exclude-pattern>
        <exclude-pattern>tiki-print_indexed.php</exclude-pattern>
    </rule>

    <!-- ## Mark some rules as warnings until tiki gets in a better shape -->

    <!-- Change severity to be able to filter if too many lines over 120 using cli option warning-severity=5 -->
    <rule ref="Generic.Files.LineLength">
        <severity>4</severity>
    </rule>

    <!-- Relax some PRS-1/PSR-2 Rules to match current status.
        Instead of error, these rules will return warning, and the severity is 6 so you can
        display only these warning using the cli option warning-severity=6 -->

    <!-- Relax PSR -->
    <!-- Namespaces and classes MUST follow PSR-0.
        This means each class is in a file by itself, and is in a namespace of at least one level: a top-level vendor name. -->
    <rule ref="PSR1.Classes.ClassDeclaration.MissingNamespace">
        <message>Tiki PSR1 Relaxed: Each %s must be in a namespace of at least one level (a top-level vendor name)</message>
        <type>warning</type>
        <severity>6</severity>
    </rule>
    <rule ref="PSR1.Classes.ClassDeclaration.MultipleClasses">
        <message>Tiki PSR1 Relaxed: Each class must be in a file by itself</message>
        <type>warning</type>
        <severity>6</severity>
    </rule>
    <!-- Class names MUST be declared in StudlyCaps. -->
    <rule ref="Squiz.Classes.ValidClassName.NotCamelCaps">
        <message>Tiki PSR1 Relaxed: %s name "%s" is not in camel caps format</message>
        <type>warning</type>
        <severity>6</severity>
    </rule>
    <!-- Method names MUST be declared in camelCase(). -->
    <rule ref="PSR1.Methods.CamelCapsMethodName.NotCamelCaps">
        <message>Tiki PSR1 Relaxed: Method name "%s" is not in camel caps format</message>
        <type>warning</type>
        <severity>6</severity>
    </rule>
    <!-- Visibility MUST be declared on all properties -->
    <rule ref="PSR2.Classes.PropertyDeclaration.ScopeMissing">
        <message>Tiki PSR2 Relaxed: Visibility must be declared on property "%s"</message>
        <type>warning</type>
        <severity>6</severity>
    </rule>
    <!-- The var keyword MUST NOT be used to declare a property -->
    <rule ref="PSR2.Classes.PropertyDeclaration.VarUsed">
        <message>Tiki PSR2 Relaxed: The var keyword must not be used to declare a property</message>
        <type>warning</type>
        <severity>6</severity>
    </rule>
    <!-- Visibility MUST be declared on all methods. -->
    <rule ref="Squiz.Scope.MethodScope.Missing">
        <message>Tiki PSR2 Relaxed: Visibility must be declared on method "%s"</message>
        <type>warning</type>
        <severity>6</severity>
    </rule>
    <!-- ~ PSR -->

    <!-- Relax ZF Coding Standards -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax">
        <message>Tiki ZF CS Relaxed: Short array syntax must be used to define arrays</message>
        <type>warning</type>
        <severity>6</severity>
    </rule>
    <!-- ~ ZF Coding Standards -->

    <!-- ## Overrides - at the end to make sure they are applied -->
    <!-- From ZF Standards -->
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="ignoreBlankLines" value="false"/>
        </properties>
    </rule>
</ruleset>
