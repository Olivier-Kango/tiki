---
get:
  description: Get all users
  parameters:
    - name: groupIds[]
      in: query
      required: false
      description: The group IDs to filter users by
      schema:
        type: array
        items:
          type: integer
    - name: offset
      in: query
      required: false
      description: The offset to start from
      schema:
        type: integer
    - name: maxRecords
      in: query
      required: false
      description: The maximum number of records to return
      schema:
        type: integer
  responses:
    '200':
      description: users response
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  type: object
                  descripton: TODO - document
              count:
                type: integer
post:
  description: Register/create a user
  requestBody:
    required: true
    content:
      application/x-www-form-urlencoded:
        schema:
          type: object
          properties:
            name:
              type: string
              description: The user's name
            pass:
              type: string
              description: The user's password
            passAgain:
              type: string
              description: The user's password again. Must match the pass field. 
            email:
              type: string
              description: The user's email address
  responses:
    '200':
      description: user registration response
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: object
                description: Contains success message or error messages concerning user validation.
    '403':
      description: forbidden
      content:
        application/json:
          schema:
            $ref: schemas-Error.yaml