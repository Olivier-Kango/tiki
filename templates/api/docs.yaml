---
openapi: "3.0.0"
info:
  version: 1.0.0
  title: Tiki API
  description: This is the default Tiki API allowing programmable access to the Tiki system.
  termsOfService: https://tiki.org/terms-of-service
  contact:
    name: Tiki Developers
    email: tikiwiki-devel@lists.sourceforge.net
    url: https://tiki.org/Contact-Us
  license:
    name: LGPL 2.1
    url: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html
externalDocs:
  description: Tiki documentation
  url: https://doc.tiki.org/Documentation
servers:
  - url: {server-url}
security:
  - bearerAuth: []
paths:
  /categories:
    get:
      description: Get all categories
      parameters:
        - name: parentId
          in: query
          required: false
          schema:
            type: integer
        - name: descends
          in: query
          required: false
          schema:
            type: integer
        - name: type
          in: query
          required: false
          description: "'roots' return root level categories, 'all' return all categories, everything else return descendants of a category"
          schema:
            type: string
      responses:
        '200':
          description: categories response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      descripton: TODO - document
  /trackers:
    get:
      description: Get all trackers that target user can see along with their configuration details.
      responses:
        '200':
          description: tracker response
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: object
                    description: List of tracker IDs and names
                    example: |
                      {"9": "Tracker 9", "15": "Tracker 15"}
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        trackerId:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        descriptionIsParsed:
                          $ref: '#/components/schemas/TikiBoolean'
                        created:
                          type: integer
                        lastModif:
                          type: integer
                        items:
                          type: integer
                          description: Tracker items count
                  cant:
                    type: integer
                    description: Trackers count
    post:
      description: Create a new tracker.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tracker'
      responses:
        '200':
          description: tracker response
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackerId:
                    type: integer
                  info:
                    type: object
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trackers/{trackerId}:
    get:
      description: Retrieve items in a tracker.
      parameters:
        - name: trackerId
          in: path
          description: Tracker ID
          required: true
          schema:
            type: integer
        - name: offset
          in: query
          description: Start offset for the number of records to return.
          schema:
            type: integer
        - name: maxRecords
          in: query
          description: Maximum number of records to return.
          schema:
            type: integer
        - name: modifiedSince
          in: query
          description: Return only records newer than the specified timestamp.
          schema:
            type: integer
        - name: status
          in: query
          description: Return only records with specific status.
          schema:
            type: string
        - name: format
          in: query
          description: Specify 'raw' to return raw item values without any field processing.
          schema:
            type: string
      responses:
        '200':
          description: tracker items response
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackerId:
                    type: integer
                  offset:
                    type: integer
                  maxRecords:
                    type: integer
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        itemdId:
                          type: integer
                        status:
                          type: string
                        fields:
                          type: object
                          example: |
                            {"field1PermName": "value", "field2PermName": "value"}
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Update a tracker.
      parameters:
        - name: trackerId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tracker'
      responses:
        '200':
          description: tracker response
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackerId:
                    type: integer
                  info:
                    type: object
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Remove a tracker.
      parameters:
        - name: trackerId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: tracker response
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackerId:
                    type: integer
                  info:
                    type: object
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trackers/{trackerId}/clear:
    post:
      description: Remove all items from a tracker
      parameters:
        - name: trackerId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: tracker clear response
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackerId:
                    type: integer
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trackers/{trackerId}/duplicate:
    post:
      description: Duplicates a tracker
      parameters:
        - name: trackerId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                dupCateg:
                  type: integer
                dupPerms:
                  type: integer
      responses:
        '200':
          description: tracker duplicate response
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackerId:
                    type: integer
                  name:
                    type: string
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trackers/{trackerId}/dump:
    get:
      description: Dump all tracker items in a csv format
      parameters:
        - name: trackerId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: tracker dump response
          content:
            text/csv: {}
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trackers/{trackerId}/export:
    get:
      description: Export the tracker YAML profile
      parameters:
        - name: trackerId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: tracker export response
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackerId:
                    type: integer
                  yaml:
                    type: string
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trackers/{trackerId}/fields:
    get:
      description: Retrieve all fields of a tracker
      parameters:
        - name: trackerId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: tracker fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      type: object
                      description: Field definition
                  types:
                    type: object
                    description: All field types supported by the system
                  duplicates:
                    type: array
                    items:
                      type: object
                      description: List of fields with conflicting permanent names
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Create a tracker field
      parameters:
        - name: trackerId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - name
                - permName
                - type
              properties:
                name:
                  type: string
                permName:
                  type: string
                description:
                  type: string
                description_parse:
                  type: integer
                type:
                  type: string
                adminOnly:
                  type: boolean
      responses:
        '200':
          description: tracker field response
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackerId:
                    type: integer
                  fieldId:
                    type: integer
                  name:
                    type: string
                  permName:
                    type: string
                  type:
                    type: string
                  types:
                    type: object
                  description:
                    type: string
                  descriptionIsParsed:
                    type: string
                  fieldPrefix:
                    type: string
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete one or more tracker fields
      parameters:
        - name: trackerId
          in: path
          required: true
          schema:
            type: integer
        - name: fields[]
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: tracker field delete response
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackerId:
                    type: integer
                  fields:
                    type: object
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trackers/{trackerId}/fields/{fieldId}:
    post:
      description: Update a tracker field
      parameters:
        - name: trackerId
          in: path
          required: true
          schema:
            type: integer
        - name: fieldId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - name
                - permName
              properties:
                name:
                  type: string
                permName:
                  type: string
                description:
                  type: string
                description_parse:
                  type: integer
                option[]:
                  type: array
                  items:
                    type: string
                type:
                  type: string
                position:
                  type: integer
                isTblVisible:
                  type: integer
                isMain:
                  type: integer
                isSearchable:
                  type: integer
                isPublic:
                  type: integer
                isMandatory:
                  type: integer
                validation_type:
                  type: string
                validation_parameter:
                  type: string
                validation_message:
                  type: string
                multilingual:
                  type: integer
                visible_by:
                  type: string
                  description: Comma-separated list of groups with permission to see this field
                editable_by:
                  type: string
                  description: Comma-separated list of groups with permission to see this field
                visibility:
                  type: string
                error_message:
                  type: string
                conditions:
                  type: string
                actions:
                  type: string
                else:
                  type: string
                encryption_key_id:
                  type: integer
      responses:
        '200':
          description: tracker field response
          content:
            application/json:
              schema:
                type: object
                properties:
                  field:
                    type: object
                    description: TODO
                  info:
                    type: object
                    description: TODO
                  options:
                    type: object
                    description: TODO
                  types:
                    type: object
                    description: TODO
                  fields:
                    type: object
                    description: TODO
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trackers/{trackerId}/fields/export:
    get:
      description: Export tracker fields
      parameters:
        - name: trackerId
          in: path
          required: true
          schema:
            type: integer
        - name: fields
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: tracker fields export
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackerId:
                    type: integer
                  fields:
                    type: object
                  export:
                    type: string
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trackers/{trackerId}/items:
    post:
      description: Create a tracker item
      parameters:
        - name: trackerId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              description: Should contain an object of the field values with either field permanent names as keys or ins_FID keys.
      responses:
        '200':
          description: tracker item response
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackerId:
                    type: integer
                  trackerName:
                    type: string
                  itemId:
                    type: integer
                  fields:
                    type: object
                  forced:
                    type: object
                  trackerLogo:
                    type: string
                  status:
                    type: string
                  format:
                    type: string
                  editItemPretty:
                    type: string
                  next:
                    type: string
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trackers/{trackerId}/items/{itemId}:
    get:
      description: Retrieve a tracker item
      parameters:
        - name: trackerId
          in: path
          required: true
          schema:
            type: integer
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: tracker item response
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  itemId:
                    type: integer
                  trackerId:
                    type: integer
                  fields:
                    type: object
                    description: TODO definition
                  canModify:
                    type: boolean
                  item_info:
                    $ref: '#/components/schemas/TrackerItem'
                  info:
                    $ref: '#/components/schemas/TrackerItem'
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Update a tracker item
      parameters:
        - name: trackerId
          in: path
          required: true
          schema:
            type: integer
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              description: Should contain an object of the field values with either field permanent names as keys or ins_FID keys.
      responses:
        '200':
          description: tracker item response
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackerId:
                    type: integer
                  itemId:
                    type: integer
                  fields:
                    type: object
                  forced:
                    type: object
                  status:
                    type: string
                  format:
                    type: string
                  editItemPretty:
                    type: string
                  redirect:
                    type: string
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete a tracker item
      parameters:
        - name: trackerId
          in: path
          required: true
          schema:
            type: integer
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: delete tracker item response
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackerId:
                    type: integer
                  itemId:
                    type: integer
                  affectedCount:
                    type: integer
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trackers/{trackerId}/items/{itemId}/clone:
    post:
      description: Clone a tracker item
      parameters:
        - name: trackerId
          in: path
          required: true
          schema:
            type: integer
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: cloned item
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackerId:
                    type: integer
                  itemId:
                    type: integer
                  created:
                    type: integer
                  data:
                    type: object
                  fields:
                    type: object
                  forced:
                    type: object
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trackers/{trackerId}/items/{itemId}/status:
    post:
      description: Update the status of a tracker item
      parameters:
        - name: trackerId
          in: path
          required: true
          schema:
            type: integer
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                status:
                  type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /translations/{type}/{source}:
    get:
      description: List translations for an object
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
        - name: source
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: translations response
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  source:
                    type: string
                  filters:
                    type: object
                  translations:
                    type: object
                  canAttach:
                    type: boolean
                  canDetach:
                    type: boolean
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /translations/{type}/{source}/attach:
    post:
      description: Attach translations
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
        - name: source
          in: path
          required: true
          schema:
            type: string
        - name: target
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: attach translation response
          content:
            application/json:
              schema:
                type: object
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /translations/{type}/{source}/detach:
    post:
      description: Detach translations
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
        - name: source
          in: path
          required: true
          schema:
            type: string
        - name: target
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: detach translation response
          content:
            application/json:
              schema:
                type: object
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /translate:
    post:
      description: Machine translation of an object
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                lang:
                  type: string
      responses:
        '200':
          description: translate response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: string
                  target:
                    type: string
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users:
    get:
      description: Get all users
      parameters:
        - name: groupIds
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: maxRecords
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: users response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      descripton: TODO - document
                  count:
                    type: integer
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Obtain bearer token keys from your Tiki admin Security page.
  schemas:
    Error:
      type: object
      required:
        - code
        - errortitle
        - message
      properties:
        code:
          type: integer
        errortitle:
          type: string
        message:
          type: string
    TikiBoolean:
      type: string
      enum:
        - y
        - n
    Tracker:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string
        descriptionIsParsed:
          type: integer
        fieldPrefix:
          type: string
        permName:
          type: string
        showStatus:
          type: integer
        showStatusAdminOnly:
          type: integer
        showCreated:
          type: integer
        showCreatedView:
          type: integer
        showCreatedBy:
          type: integer
        showCreatedFormat:
          type: string
        showLastModif:
          type: integer
        showLastModifView:
          type: integer
        showLastModifBy:
          type: integer
        showLastModifFormat:
          type: string
        defaultOrderKey:
          type: integer
        defaultOrderDir:
          type: string
        doNotShowEmptyField:
          type: integer
        showPopup:
          type: string
        defaultStatus:
          type: array
        newItemStatus:
          type: string
        modItemStatus:
          type: string
        outboundEmail:
          type: string
        simpleEmail:
          type: integer
        userCanSeeOwn:
          type: integer
        groupCanSeeOwn:
          type: integer
        writerCanModify:
          type: integer
        writerCanRemove:
          type: integer
        userCanTakeOwnership:
          type: integer
        oneUserItem:
          type: integer
        writerGroupCanModify:
          type: integer
        writerGroupCanRemove:
          type: integer
        useRatings:
          type: integer
        showRatings:
          type: integer
        ratingOptions:
          type: string
        useComments:
          type: integer
        showComments:
          type: integer
        showLastComment:
          type: integer
        saveAndComment:
          type: integer
        useAttachments:
          type: integer
        showAttachments:
          type: integer
        orderAttachments:
          type: array
        start:
          type: integer
        end:
          type: integer
        autoCreateGroup:
          type: integer
        autoCreateGroupInc:
          type: string
        autoAssignCreatorGroup:
          type: integer
        autoAssignCreatorGroupDefault:
          type: integer
        autoAssignGroupItem:
          type: integer
        autoCopyGroup:
          type: integer
        viewItemPretty:
          type: string
        editItemPretty:
          type: string
        autoCreateCategories:
          type: integer
        publishRSS:
          type: integer
        sectionFormat:
          type: string
        adminOnlyViewEditItem:
          type: integer
        logo:
          type: string
        useFormClasses:
          type: integer
        formClasses:
          type: string
        tabularSync:
          type: integer
        tabularSyncModifiedField:
          type: integer
        tabularSyncLastImport:
          type: integer
    TrackerItem:
      type: object
      properties:
        itemId:
          type: integer
        trackerId:
          type: integer
        created:
          type: integer
        createdBy:
          type: string
        status:
          type: string
        lastModif:
          type: integer
        lastModifBy:
          type: string
